#!/usr/bin/env bash

set -e

CWDIR=$(pwd)

ACTION=$1
VPN=${2%/} # strip any trailing "/" in case dir was given

CONF_DIR=${HOME}/.cert
PID_DIR=/var/run/openvpn
PID_FILE=${PID_DIR}/${VPN}.pid

usage() {
	echo "Quick script to start/stop vpn connections."
	echo
	echo "Usage: vpn <start|stop|status> [name]"
	echo
	exit 1
}

# Make sure we're root when running this script
test $(id -u) -ne 0 && exec sudo -- "$0" "$@"

# Check arguments
test -z ${ACTION} && usage

vpn_start() {
	test -z ${VPN} && usage

	if test -f ${PID_FILE}; then
		echo "${VPN} already up"
		exit 2
	fi

	echo "starting ${VPN}"
	cd ${CONF_DIR}/${VPN}
	openvpn --daemon --config ${VPN}.conf --writepid ${PID_FILE}
	sleep 1

	# Check pid exists
	PID=$(<${PID_FILE})
	if test "$(ps -eo pid | grep ${PID})" = ""; then
		echo "${VPN} didn't start correctly, see syslog for more details"
		rm ${PID_FILE}
		exit 3
	else
		echo "done"
	fi

	cd ${CWDIR}
}

vpn_stop() {
	test -z ${VPN} && usage

	if ! test -f ${PID_FILE}; then
		echo "${VPN} already down"
		exit 2
	fi

	echo "stopping ${VPN}"
	PID=$(<${PID_FILE})
	kill -HUP ${PID}
	sleep 1

	# Check pid is gone
	if ! test -z $(ps -eo pid | grep ${PID}); then
		echo "${VPN} is still up, focibly stopping"
		kill -9 ${PID}
	fi

	rm ${PID_FILE}
	echo "done"
}

vpn_status() {
	if [ "$(ls -A ${PID_DIR})" ]; then
		for PID_FILE in ${PID_DIR}/*.pid
		do
			PID=$(<${PID_FILE})
			VPN=$(basename ${PID_FILE})
			if ! test -z $(ps -eo pid | grep ${PID}); then
				echo "${VPN%.pid} is up"
			fi
		done
	fi
}

case ${ACTION} in
	"start") vpn_start;;
	"stop") vpn_stop;;
	"status") vpn_status;;
	*) echo "invalid command ${ACTION}" && usage ;;
esac
